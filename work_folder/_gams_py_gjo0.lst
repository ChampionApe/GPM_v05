GAMS 29.1.0  rbb4180b Released Nov 15, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/17/21 20:12:22 Page 1
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


   3   
   4   
   5  # Root File for model
   6  OPTION SYSOUT=OFF, SOLPRINT=OFF, LIMROW=0, LIMCOL=0, DECIMALS=6;
   7  ;
   8   
   9  # ----------------------------------------------------------------------------------------------------
  10  #  Import file: C:\Users\sxj477\Documents\GitHub\GPM_v05\work_folder\p_static_CollectFile.gms
  11  # ----------------------------------------------------------------------------------------------------
  12   
  13   
  14  # ----------------------------------------------------------------------------------------------------
  15  #  Import file: C:\Users\sxj477\Documents\GitHub\GPM_v05\work_folder\p_static_functions.gms
  16  # ----------------------------------------------------------------------------------------------------
  17   
  18   
  19  # ----------------------------------------------------------------------------------------------------
  20  #  Define function: load_level
  21  # ----------------------------------------------------------------------------------------------------
  22   
  23   
  24   
  25  # ----------------------------------------------------------------------------------------------------
  26  #  Define function: load_fixed
  27  # ----------------------------------------------------------------------------------------------------
  28   
  29   
  30  ;
  31   
  32  # ----------------------------------------------------------------------------------------------------
  33  #  Import file: C:\Users\sxj477\Documents\GitHub\GPM_v05\work_folder\p_static_sets.gms
  34  # ----------------------------------------------------------------------------------------------------
  35   
  36  sets
  37          alias_set
  38          alias_map2
  39          n
  40          s
  41  ;
  42   
  43  alias(n,nn,nnn);
  44   
  45  sets
  46          alias_[alias_set,alias_map2]
  47          map_all[s,n,nn]
  48          inp[s,n]
  49          out[s,n]
  50          int[s,n]
  51          fg[n]
  52          wT[s,n]
  53          kno_out[s,n]
  54          kno_inp[s,n]
  55          map_lower_nests[s,n,nn]
GAMS 29.1.0  rbb4180b Released Nov 15, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/17/21 20:12:22 Page 2
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


  56          kno_lower_nests[s,n]
  57          bra_lower_nests[s,n]
  58          inp_lower_nests[s,n]
  59          out_lower_nests[s,n]
  60          kno_no_lower_nests[s,n]
  61          bra_o_lower_nests[s,n]
  62          bra_no_lower_nests[s,n]
  63          map_upper_nest[s,n,nn]
  64          kno_upper_nest[s,n]
  65          bra_upper_nest[s,n]
  66          inp_upper_nest[s,n]
  67          out_upper_nest[s,n]
  68          kno_no_upper_nest[s,n]
  69          bra_o_upper_nest[s,n]
  70          bra_no_upper_nest[s,n]
  71          n_out[n]
  72          s_prod[s]
  73          endo_PbT[s,n]
  74          exo_mu[s,n,nn]
  75  ;
GDXIN   C:\Users\sxj477\Documents\GitHub\GPM_v05\work_folder\p_0.gdx
--- LOAD  alias_set = 1:alias_set
--- LOAD  alias_map2 = 2:alias_map2
--- LOAD  n = 3:n
--- LOAD  s = 4:s
--- LOAD  fg = 12:fg
--- LOAD  n_out = 34:n_out
--- LOAD  s_prod = 35:s_prod
--- LOAD  alias_ = 7:alias_
--- LOAD  map_all = 8:map_all
--- LOAD  inp = 9:inp
--- LOAD  out = 10:out
--- LOAD  int = 11:int
--- LOAD  wT = 13:wT
--- LOAD  kno_out = 14:kno_out
--- LOAD  kno_inp = 15:kno_inp
--- LOAD  map_lower_nests = 18:map_lower_nests
--- LOAD  kno_lower_nests = 19:kno_lower_nests
--- LOAD  bra_lower_nests = 20:bra_lower_nests
--- LOAD  inp_lower_nests = 21:inp_lower_nests
--- LOAD  out_lower_nests = 22:out_lower_nests
--- LOAD  kno_no_lower_nests = 23:kno_no_lower_nests
--- LOAD  bra_o_lower_nests = 24:bra_o_lower_nests
--- LOAD  bra_no_lower_nests = 25:bra_no_lower_nests
--- LOAD  map_upper_nest = 26:map_upper_nest
--- LOAD  kno_upper_nest = 27:kno_upper_nest
--- LOAD  bra_upper_nest = 28:bra_upper_nest
--- LOAD  inp_upper_nest = 29:inp_upper_nest
--- LOAD  out_upper_nest = 30:out_upper_nest
--- LOAD  kno_no_upper_nest = 31:kno_no_upper_nest
--- LOAD  bra_o_upper_nest = 32:bra_o_upper_nest
--- LOAD  bra_no_upper_nest = 33:bra_no_upper_nest
--- LOAD  endo_PbT = 45:endo_PbT
GAMS 29.1.0  rbb4180b Released Nov 15, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/17/21 20:12:22 Page 3
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


--- LOAD  exo_mu = 46:exo_mu
 113  ;
 114   
 115  # ----------------------------------------------------------------------------------------------------
 116  #  Import file: C:\Users\sxj477\Documents\GitHub\GPM_v05\work_folder\p_static_parameters.gms
 117  # ----------------------------------------------------------------------------------------------------
 118   
 119  ;
 120   
 121  # ----------------------------------------------------------------------------------------------------
 122  #  Import file: C:\Users\sxj477\Documents\GitHub\GPM_v05\work_folder\p_static_groups.gms
 123  # ----------------------------------------------------------------------------------------------------
 124   
 125   
 126  # ----------------------------------------p_static_g_tech_endo----------------------------------------
 127  #  Initialize p_static_g_tech_endo group
 128  # ----------------------------------------------------------------------------------------------------
 135   
 136   
 137  # -----------------------------------------p_static_g_tech_exo----------------------------------------
 138  #  Initialize p_static_g_tech_exo group
 139  # ----------------------------------------------------------------------------------------------------
 146   
 147   
 148  # -----------------------------------------p_static_g_endovars----------------------------------------
 149  #  Initialize p_static_g_endovars group
 150  # ----------------------------------------------------------------------------------------------------
 159   
 160   
 161  # ----------------------------------------p_static_g_calib_exo----------------------------------------
 162  #  Initialize p_static_g_calib_exo group
 163  # ----------------------------------------------------------------------------------------------------
 168   
 169   
 170  # -------------------------------------------p_static_g_tech------------------------------------------
 171  #  Initialize p_static_g_tech group
 172  # ----------------------------------------------------------------------------------------------------
 175   
 176   
 177  # -----------------------------------------p_static_g_exovars-----------------------------------------
 178  #  Initialize p_static_g_exovars group
 179  # ----------------------------------------------------------------------------------------------------
 195   
 196  # ----------------------------------------------------------------------------------------------------
 197  #  Loop over __load_group
 198  # ----------------------------------------------------------------------------------------------------
 199   
 200      parameter load_PwT[s,n] "";
 201      load_PwT[s,n]$((int[s,n])) = 0;
 202   
 203      parameter load_qD[s,n] "";
 204      load_qD[s,n]$((int[s,n])) = 0;
 205   
GAMS 29.1.0  rbb4180b Released Nov 15, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/17/21 20:12:22 Page 4
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 206      parameter load_PbT[s,n] "";
 207      load_PbT[s,n]$((endo_PbT[s,n])) = 0;
 208   
 209    execute_load "p_0"
 210  # ----------------------------------------------------------------------------------------------------
 211  #  Loop over __load_group
 212  # ----------------------------------------------------------------------------------------------------
 213   load_PwT=PwT.l  load_qD=qD.l  load_PbT=PbT.l ;
 214   
 215  # ----------------------------------------------------------------------------------------------------
 216  #  Loop over __load_group
 217  # ----------------------------------------------------------------------------------------------------
 218   
 219      PwT.l[s,n]$((int[s,n])) = load_PwT[s,n];
 220   
 221      qD.l[s,n]$((int[s,n])) = load_qD[s,n];
 222   
 223      PbT.l[s,n]$((endo_PbT[s,n])) = load_PbT[s,n];
 225  ;
 233   
 234  # ----------------------------------------------------------------------------------------------------
 235  #  Loop over __load_group
 236  # ----------------------------------------------------------------------------------------------------
 237   
 238      parameter load_qD[s,n] "";
 239      load_qD[s,n]$((inp[s,n])) = 0;
 240   
 241      parameter load_PbT[s,n] "";
 242      load_PbT[s,n]$(((out[s,n] and not endo_PbT[s,n]))) = 0;
 243   
 244      parameter load_Peq[n] "";
 245      load_Peq[n]$((n_out[n])) = 0;
 246   
 247    execute_load "p_0"
 248  # ----------------------------------------------------------------------------------------------------
 249  #  Loop over __load_group
 250  # ----------------------------------------------------------------------------------------------------
 251   load_qD=qD.l  load_PbT=PbT.l  load_Peq=Peq.l ;
 252   
 253  # ----------------------------------------------------------------------------------------------------
 254  #  Loop over __load_group
 255  # ----------------------------------------------------------------------------------------------------
 256   
 257      qD.l[s,n]$((inp[s,n])) = load_qD[s,n];
 258   
 259      PbT.l[s,n]$(((out[s,n] and not endo_PbT[s,n]))) = load_PbT[s,n];
 260   
 261      Peq.l[n]$((n_out[n])) = load_Peq[n];
 263  ;
 271   
 272  # ----------------------------------------------------------------------------------------------------
 273  #  Loop over __load_group
 274  # ----------------------------------------------------------------------------------------------------
GAMS 29.1.0  rbb4180b Released Nov 15, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/17/21 20:12:22 Page 5
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 275   
 276      parameter load_mu[s,n,nn] "";
 277      load_mu[s,n,nn]$(((map_all[s,n,nn] and not exo_mu[s,n,nn]))) = 0;
 278   
 279      parameter load_markup[s,n] "";
 280      load_markup[s,n]$((out[s,n])) = 0;
 281   
 282    execute_load "p_0"
 283  # ----------------------------------------------------------------------------------------------------
 284  #  Loop over __load_group
 285  # ----------------------------------------------------------------------------------------------------
 286   load_mu=mu.l  load_markup=markup.l ;
 287   
 288  # ----------------------------------------------------------------------------------------------------
 289  #  Loop over __load_group
 290  # ----------------------------------------------------------------------------------------------------
 291   
 292      mu.fx[s,n,nn]$(((map_all[s,n,nn] and not exo_mu[s,n,nn]))) = load_mu[s,n,nn];
 293   
 294      markup.fx[s,n]$((out[s,n])) = load_markup[s,n];
 296  ;
 304   
 305  # ----------------------------------------------------------------------------------------------------
 306  #  Loop over __load_group
 307  # ----------------------------------------------------------------------------------------------------
 308   
 309      parameter load_sigma[s,n] "";
 310      load_sigma[s,n]$((kno_inp[s,n])) = 0;
 311   
 312      parameter load_eta[s,n] "";
 313      load_eta[s,n]$((kno_out[s,n])) = 0;
 314   
 315      parameter load_mu[s,n,nn] "";
 316      load_mu[s,n,nn]$((exo_mu[s,n,nn])) = 0;
 317   
 318    execute_load "p_0"
 319  # ----------------------------------------------------------------------------------------------------
 320  #  Loop over __load_group
 321  # ----------------------------------------------------------------------------------------------------
 322   load_sigma=sigma.l  load_eta=eta.l  load_mu=mu.l ;
 323   
 324  # ----------------------------------------------------------------------------------------------------
 325  #  Loop over __load_group
 326  # ----------------------------------------------------------------------------------------------------
 327   
 328      sigma.fx[s,n]$((kno_inp[s,n])) = load_sigma[s,n];
 329   
 330      eta.fx[s,n]$((kno_out[s,n])) = load_eta[s,n];
 331   
 332      mu.fx[s,n,nn]$((exo_mu[s,n,nn])) = load_mu[s,n,nn];
 334  ;
 342   
 343  # ----------------------------------------------------------------------------------------------------
GAMS 29.1.0  rbb4180b Released Nov 15, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/17/21 20:12:22 Page 6
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 344  #  Loop over __load_group
 345  # ----------------------------------------------------------------------------------------------------
 346   
 347      parameter load_mu[s,n,nn] "";
 348      load_mu[s,n,nn]$(((exo_mu[s,n,nn]) or ((map_all[s,n,nn] and not exo_mu[s,n,nn])))) = 0;
 349   
 350      parameter load_markup[s,n] "";
 351      load_markup[s,n]$((out[s,n])) = 0;
 352   
 353      parameter load_sigma[s,n] "";
 354      load_sigma[s,n]$((kno_inp[s,n])) = 0;
 355   
 356      parameter load_eta[s,n] "";
 357      load_eta[s,n]$((kno_out[s,n])) = 0;
 358   
 359    execute_load "p_0"
 360  # ----------------------------------------------------------------------------------------------------
 361  #  Loop over __load_group
 362  # ----------------------------------------------------------------------------------------------------
 363   load_mu=mu.l  load_markup=markup.l  load_sigma=sigma.l  load_eta=eta.l ;
 364   
 365  # ----------------------------------------------------------------------------------------------------
 366  #  Loop over __load_group
 367  # ----------------------------------------------------------------------------------------------------
 368   
 369      mu.fx[s,n,nn]$(((exo_mu[s,n,nn]) or ((map_all[s,n,nn] and not exo_mu[s,n,nn])))) = load_mu[s,n,nn];
 370   
 371      markup.fx[s,n]$((out[s,n])) = load_markup[s,n];
 372   
 373      sigma.fx[s,n]$((kno_inp[s,n])) = load_sigma[s,n];
 374   
 375      eta.fx[s,n]$((kno_out[s,n])) = load_eta[s,n];
 377  ;
 385   
 386  # ----------------------------------------------------------------------------------------------------
 387  #  Loop over __load_group
 388  # ----------------------------------------------------------------------------------------------------
 389   
 390      parameter load_PwT[s,n] "";
 391      load_PwT[s,n]$((inp[s,n])) = 0;
 392   
 393      parameter load_qS[s,n] "";
 394      load_qS[s,n]$((out[s,n])) = 0;
 395   
 396      parameter load_tauS[s,n] "";
 397      load_tauS[s,n]$((out[s,n])) = 0;
 398   
 399      parameter load_tauLump[s] "";
 400      load_tauLump[s]$((s_prod[s])) = 0;
 401   
 402    execute_load "p_0"
 403  # ----------------------------------------------------------------------------------------------------
 404  #  Loop over __load_group
GAMS 29.1.0  rbb4180b Released Nov 15, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/17/21 20:12:22 Page 7
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 405  # ----------------------------------------------------------------------------------------------------
 406   load_PwT=PwT.l  load_qS=qS.l  load_tauS=tauS.l  load_tauLump=tauLump.l ;
 407   
 408  # ----------------------------------------------------------------------------------------------------
 409  #  Loop over __load_group
 410  # ----------------------------------------------------------------------------------------------------
 411   
 412      PwT.fx[s,n]$((inp[s,n])) = load_PwT[s,n];
 413   
 414      qS.fx[s,n]$((out[s,n])) = load_qS[s,n];
 415   
 416      tauS.fx[s,n]$((out[s,n])) = load_tauS[s,n];
 417   
 418      tauLump.fx[s]$((s_prod[s])) = load_tauLump[s];
 420  ;
 421  ;
 422   
 423  # ----------------------------------------------------------------------------------------------------
 424  #  Import file: C:\Users\sxj477\Documents\GitHub\GPM_v05\work_folder\p_static_blocks.gms
 425  # ----------------------------------------------------------------------------------------------------
 426   
 427   
 428  # --------------------------------------------M_lower_nests-------------------------------------------
 429  #  Initialize M_lower_nests equation block
 430  # ----------------------------------------------------------------------------------------------------
 431  EQUATION E_zp_out_lower_nests[s,n];
 432  E_zp_out_lower_nests[s,n]$(out_lower_nests[s,n])..      PbT[s,n]*qS[s,n]  =E=  sum(nn$(map_lower_nests[s,nn,n]), qD[s,nn]*PwT[s,nn]);
 433  EQUATION E_zp_nout_lower_nests[s,n];
 434  E_zp_nout_lower_nests[s,n]$(kno_no_lower_nests[s,n])..  PwT[s,n]*qD[s,n]  =E=  sum(nn$(map_lower_nests[s,nn,n]), qD[s,nn]*PwT[s,nn]);
 435  EQUATION E_q_out_lower_nests[s,n];
 436  E_q_out_lower_nests[s,n]$(bra_o_lower_nests[s,n])..     qD[s,n]  =E=  sum(nn$(map_lower_nests[s,n,nn]), mu[s,n,nn] * (PbT[s,nn]/PwT[s,n])**(sigma[s,nn]) * qS[s,nn]);
 437  EQUATION E_q_nout_lower_nests[s,n];
 438  E_q_nout_lower_nests[s,n]$(bra_no_lower_nests[s,n])..   qD[s,n]  =E=  sum(nn$(map_lower_nests[s,n,nn]), mu[s,n,nn] * (PwT[s,nn]/PwT[s,n])**(sigma[s,nn]) * qD[s,nn]);
 439   
 440  # ----------------------------------------------------------------------------------------------------
 441  #  Define M_lower_nests model
 442  # ----------------------------------------------------------------------------------------------------
 443  Model M_lower_nests /
 444  E_zp_out_lower_nests, E_zp_nout_lower_nests, E_q_out_lower_nests, E_q_nout_lower_nests
 445  /;
 446   
 447   
 448  # --------------------------------------------M_upper_nest--------------------------------------------
 449  #  Initialize M_upper_nest equation block
 450  # ----------------------------------------------------------------------------------------------------
 451  EQUATION E_zp_out_upper_nest[s,n];
 452  E_zp_out_upper_nest[s,n]$(out_upper_nest[s,n])..        PbT[s,n]*qS[s,n]  =E=  sum(nn$(map_upper_nest[s,nn,n]), qD[s,nn]*PwT[s,nn]);
 453  EQUATION E_zp_nout_upper_nest[s,n];
 454  E_zp_nout_upper_nest[s,n]$(kno_no_upper_nest[s,n])..    PwT[s,n]*qD[s,n]  =E=  sum(nn$(map_upper_nest[s,nn,n]), qD[s,nn]*PwT[s,nn]);
 455  EQUATION E_q_out_upper_nest[s,n];
 456  E_q_out_upper_nest[s,n]$(bra_o_upper_nest[s,n])..       qD[s,n]  =E=  sum(nn$(map_upper_nest[s,n,nn]), mu[s,n,nn] * (PbT[s,nn]/PwT[s,n])**(sigma[s,nn]) * qS[s,nn]);
 457  EQUATION E_q_nout_upper_nest[s,n];
 458  E_q_nout_upper_nest[s,n]$(bra_no_upper_nest[s,n])..     qD[s,n]  =E=  sum(nn$(map_upper_nest[s,n,nn]), mu[s,n,nn] * (PwT[s,nn]/PwT[s,n])**(sigma[s,nn]) * qD[s,nn]);
GAMS 29.1.0  rbb4180b Released Nov 15, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/17/21 20:12:22 Page 8
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 459   
 460  # ----------------------------------------------------------------------------------------------------
 461  #  Define M_upper_nest model
 462  # ----------------------------------------------------------------------------------------------------
 463  Model M_upper_nest /
 464  E_zp_out_upper_nest, E_zp_nout_upper_nest, E_q_out_upper_nest, E_q_nout_upper_nest
 465  /;
 466   
 467   
 468  # --------------------------------------------M_p_static_pw-------------------------------------------
 469  #  Initialize M_p_static_pw equation block
 470  # ----------------------------------------------------------------------------------------------------
 471  EQUATION E_pw_p_static[s,n];
 472  E_pw_p_static[s,n]$(out[s,n])..         Peq[n]  =E=  (1+markup[s,n])*(PbT[s,n]*(1+tauLump[s]/sum(nn$(out[s,nn]), qS[s,nn]*PbT[s,nn]))+tauS[s,n]+0);
 473   
 474  # ----------------------------------------------------------------------------------------------------
 475  #  Define M_p_static_pw model
 476  # ----------------------------------------------------------------------------------------------------
 477  Model M_p_static_pw /
 478  E_pw_p_static
 479  /;
 480   
 481  ;
 482  ;
 483   
 484  # ----------------------------------------------------------------------------------------------------
 485  #  Import file: C:\Users\sxj477\Documents\GitHub\GPM_v05\work_folder\RunFile.gms
 486  # ----------------------------------------------------------------------------------------------------
 487   
 488   
 489  # ----------------------------------------------------------------------------------------------------$FIX p_static_g_tech, p_static_g_exovars;
 490  # ----------------------------------------------------------------------------------------------------
 501   
 502  # ----------------------------------------------------------------------------------------------------$UNFIX p_static_g_endovars, p_static_g_calib_exo;
 503  # ----------------------------------------------------------------------------------------------------
 514   
 515  # ----------------------------------------------------------------------------------------------------
 516  #  Define p_static_B model
 517  # ----------------------------------------------------------------------------------------------------
 518  Model p_static_B /
 519  E_zp_out_upper_nest, E_zp_nout_upper_nest, E_q_out_upper_nest, E_q_nout_upper_nest, E_pw_p_static, E_zp_out_lower_nests, E_zp_nout_lower_nests, E_q_out_lower_nests, E_q_nout_lower_nests
 520  /;
 521   
 522  scalars p_static_B_modelstat, p_static_B_solvestat;
 523  solve p_static_B using CNS;
 524  p_static_B_modelstat = p_static_B.modelstat; p_static_B_solvestat = p_static_B.solvestat;
 525  ;
GAMS 29.1.0  rbb4180b Released Nov 15, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               05/17/21 20:12:22 Page 9
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Include File Summary


   SEQ   GLOBAL TYPE      PARENT   LOCAL  FILENAME

     1        1 INPUT          0       0  C:\Users\sxj477\Documents\GitHub\GPM_v05\work_folder\CollectAndRun.gmy
     2       76 GDXIN          1      76  C:\Users\sxj477\Documents\GitHub\GPM_v05\work_folder\p_0.gdx


COMPILATION TIME     =        0.032 SECONDS      3 MB  29.1.0 rbb4180b WEX-WEI
GAMS 29.1.0  rbb4180b Released Nov 15, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/17/21 20:12:22 Page 10
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Model Statistics    SOLVE p_static_B Using CNS From line 523


MODEL STATISTICS

BLOCKS OF EQUATIONS           9     SINGLE EQUATIONS           34
BLOCKS OF VARIABLES          10     SINGLE VARIABLES           88
NON ZERO ELEMENTS           208     NON LINEAR N-Z            184
DERIVATIVE POOL              20     CONSTANT POOL              16
CODE LENGTH                 353
SINGLE =E|X= EQUS            34     SINGLE UNFIXED VARS        34


GENERATION TIME      =        0.000 SECONDS      4 MB  29.1.0 rbb4180b WEX-WEI


EXECUTION TIME       =        0.000 SECONDS      4 MB  29.1.0 rbb4180b WEX-WEI
GAMS 29.1.0  rbb4180b Released Nov 15, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/17/21 20:12:22 Page 11
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE p_static_B Using CNS From line 523


               S O L V E      S U M M A R Y

     MODEL   p_static_B          
     TYPE    CNS                 
     SOLVER  CONOPT4             FROM LINE  523

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      16 Solved                   

 RESOURCE USAGE, LIMIT          0.047      1000.000
 ITERATION COUNT, LIMIT         1    2000000000
 EVALUATION ERRORS              0             0

CONOPT 4         29.1.0 rbb4180b Released Nov 15, 2019 WEI x86 64bit/MS Window
 
 
    C O N O P T   version 4.15
    Copyright (C) ARKI Consulting and Development A/S
                  Bagsvaerdvej 246 A
                  DK-2880 Bagsvaerd, Denmark
    Licensed to:  GAMS/CONOPT OEM License
 
 
    The user model has 34 constraints and 88 variables
    with 208 Jacobian elements, 184 of which are nonlinear.
 
    The pre-triangular part of the model has 0 constraints and 54 variables.
 
    Preprocessed model has 34 constraints and 34 variables
    with 120 Jacobian elements, 96 of which are nonlinear.
 
 ** Feasible solution to a square system.
 
 
 CONOPT time Total                            0.027 seconds
   of which: Function evaluations             0.001 =  3.7%
             1st Derivative evaluations       0.000 =  0.0%
 


**** REPORT SUMMARY :        0 INFEASIBLE
                             0  DEPENDENT
                             0     ERRORS
GAMS 29.1.0  rbb4180b Released Nov 15, 2019 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              05/17/21 20:12:22 Page 12
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
E x e c u t i o n


EXECUTION TIME       =        0.000 SECONDS      3 MB  29.1.0 rbb4180b WEX-WEI


USER: Medium MUD - 10 User License                   G200108/0001CA-WIN
      DREAM, Danish Rational Economic Agents Model                DC620


**** FILE SUMMARY

Input      C:\Users\sxj477\Documents\GitHub\GPM_v05\work_folder\CollectAndRun.gmy
Output     C:\Users\sxj477\Documents\GitHub\GPM_v05\work_folder\_gams_py_gjo0.lst
Save       C:\Users\sxj477\Documents\GitHub\GPM_v05\work_folder\_gams_py_gcp0.g0?

**** WARNING - COMPILER OPTIONS ARE NON DEFAULT     EOLCOM # 
